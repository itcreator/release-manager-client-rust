/* 
 * Release Manager
 *
 * This application generate version for your software.
 *
 * OpenAPI spec version: 0.2.0
 * Contact: vitalleshchyk@gmail.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct Project {
  /// A unique identifier for the project. These are created in ascending order.
  #[serde(rename = "uuid")]
  uuid: Option<i32>,
  #[serde(rename = "name")]
  name: String,
  #[serde(rename = "description")]
  description: Option<String>
}

impl Project {
  pub fn new(name: String) -> Project {
    Project {
      uuid: None,
      name: name,
      description: None
    }
  }

  pub fn set_uuid(&mut self, uuid: i32) {
    self.uuid = Some(uuid);
  }

  pub fn with_uuid(mut self, uuid: i32) -> Project {
    self.uuid = Some(uuid);
    self
  }

  pub fn uuid(&self) -> Option<&i32> {
    self.uuid.as_ref()
  }

  pub fn reset_uuid(&mut self) {
    self.uuid = None;
  }

  pub fn set_name(&mut self, name: String) {
    self.name = name;
  }

  pub fn with_name(mut self, name: String) -> Project {
    self.name = name;
    self
  }

  pub fn name(&self) -> &String {
    &self.name
  }


  pub fn set_description(&mut self, description: String) {
    self.description = Some(description);
  }

  pub fn with_description(mut self, description: String) -> Project {
    self.description = Some(description);
    self
  }

  pub fn description(&self) -> Option<&String> {
    self.description.as_ref()
  }

  pub fn reset_description(&mut self) {
    self.description = None;
  }

}



