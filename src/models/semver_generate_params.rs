/* 
 * Release Manager
 *
 * This application generate version for your software.
 *
 * OpenAPI spec version: 0.2.0
 * Contact: vitalleshchyk@gmail.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct SemverGenerateParams {
  /// MAJOR version when you make incompatible API changes
  #[serde(rename = "major")]
  major: i32,
  /// MAJOR version when you make incompatible API changes
  #[serde(rename = "minor")]
  minor: i32,
  #[serde(rename = "branch")]
  branch: String
}

impl SemverGenerateParams {
  pub fn new(major: i32, minor: i32, branch: String) -> SemverGenerateParams {
    SemverGenerateParams {
      major: major,
      minor: minor,
      branch: branch
    }
  }

  pub fn set_major(&mut self, major: i32) {
    self.major = major;
  }

  pub fn with_major(mut self, major: i32) -> SemverGenerateParams {
    self.major = major;
    self
  }

  pub fn major(&self) -> &i32 {
    &self.major
  }


  pub fn set_minor(&mut self, minor: i32) {
    self.minor = minor;
  }

  pub fn with_minor(mut self, minor: i32) -> SemverGenerateParams {
    self.minor = minor;
    self
  }

  pub fn minor(&self) -> &i32 {
    &self.minor
  }


  pub fn set_branch(&mut self, branch: String) {
    self.branch = branch;
  }

  pub fn with_branch(mut self, branch: String) -> SemverGenerateParams {
    self.branch = branch;
    self
  }

  pub fn branch(&self) -> &String {
    &self.branch
  }


}



